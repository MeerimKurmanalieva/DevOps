---
- name: Install database on Target Host
  hosts: my_ec2_instance
  become: true


  tasks:
    - name: Update APT package lists
      become: yes
      apt:
        update_cache: yes

    - name: Install prerequisites for database
      become: yes
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common

    - name: Add database GPG key
      become: yes
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add database APT repository
      become: yes
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install database
      become: yes
      apt:
        name: docker-ce
        state: present

    - name: Start database service
      become: yes
      service:
        name: docker
        state: started
        enabled: yes

    - name: Log in to database Hub
      docker_login:
        username: "{{ secrets.DOCKERHUB_USERNAME }}"
        password: "{{ secrets.DOCKERHUB_TOKEN }}"
        registry_url: https://index.docker.io/v1/
      when: secrets.DOCKERHUB_USERNAME is defined and secrets.DOCKERHUB_TOKEN is defined


    - name: Stop all database containers
      command: docker stop $(docker ps -a -q)
      ignore_errors: true

    - name: Remove all database containers
      command: docker rm $(docker ps -a -q)
      ignore_errors: true

    - name: Pull database image
      docker_image:
        name: "mkurmanalieva/hello-web-app:latest"
        source: pull

    - name: Run database container
      docker_container:
        name: mycontainer
        image: "mkurmanalieva/hello-web-app:latest"
        ports:
          - "8080:8080"
        volumes:
          - /home/Web:/usr/local/apache2/htdocs/
        restart_policy: always
        state: started
      register: status

    - name: Check container status
      debug:
        var: status
